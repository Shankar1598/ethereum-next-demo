0xbAa513AcC886E7a40160102fD4D783A0B78F3fA4


   <div className='bg'>
             <div id="form" class="form-holder">

<div class="info">
    <div class="row">
        <div class="col-4">
            <strong>RAMARAJAN  </strong>
        </div>
        <div class="col-4"><img width="15%" src="http://pngimg.com/uploads/apple_logo/apple_logo_PNG19682.png" alt=""/></div>
        <div class="col-4 vote-btn-holder">
            <button  class="btn vote btn-default btn-large">VOTE</button>
         <div id="loader"></div>
        </div>
    </div>
</div>




</div>
     <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous"/>
      </div>




pragma solidity^0.5.2;

contract wmt {
    
    address public manager;
    uint public cfi_balance;
    BlockIn[] public chainIn;
    BlockOut[] public chainOut;
    struct BlockIn {
        string id;
        uint amount;
        string tax_type;
        string tax_category;
        uint timestamp;
    }
    struct BlockOut {
        string gstin;
        uint amount;
        string purpose;
        uint timestamp;
    }
    
      modifier restricted()
    {
        require(manager == msg.sender);
        _;
    }
    
    //check in backend for proper tax type by differnt head office
    function creditTax(string memory id, uint amount,string memory tax_type,string memory tax_category) public restricted  payable  {
        cfi_balance += amount;
        BlockIn memory newBlockIn = BlockIn({
            id:id,
            amount:amount,
            tax_type:tax_type,
            tax_category:tax_category,
            timestamp:block.timestamp
        });
        //Update Chain
        chainIn.push(newBlockIn);
    }
    //Check for disaster management
    function debitAmount(string memory gstin, uint amount, string memory purpose) public payable{
        cfi_balance -= amount;
        BlockOut memory newBlockOut = BlockOut({
            gstin:gstin,
            amount:amount,
            purpose:purpose,
            timestamp:block.timestamp
        });
        chainOut.push(newBlockOut);
    }
    
    
    
    
    
}